# Configuration file for the IR Toolkit
# If modifying or adding new options, remember to also make the changes in 'config_file_properties.h'

######################
# Indexing Parameters
######################

# Document collection format.
# Formats currently supported: 'trec', 'warc'.
document_collection_format = trec

# The initial buffer size to use for uncompressing document collection files.
# (17301504 = 16*1024^2 + 2*256*1024: fits GOV2 TREC collection).
# (1090519040 = 1024^3 + 16*1024^2: fits ClueWeb09 TREC collection).
document_collection_buffer_size = 17301504

# Size of the hash table used for posting accumulation.
hash_table_size = 1048576 # 536870912

# Size of the memory pool for posting accumulation.
# (test values: 536870912, 268435456, 67108864)
memory_pool_size = 268435456 # 4294967296

# Size of each memory pool block. Should be kept small to make the most use of memory.
# The smaller the size, the less memory we waste for very small lists,
# but the more overall pointer overhead we have since we have to store a pointer
# for each block allocated in the memory pool.
memory_pool_block_size = 128

# Controls whether positions will be indexed.
include_positions = false

# Controls whether contexts will be indexed.
include_contexts = false

# Defines the coding policy to be used during indexing.
# Valid codings are 'rice', 'turbo-rice', 'pfor', 's9', 's16', 'vbyte', and 'null'.
# If modifying or adding new methods, remember to also make the changes in 'coding_methods.h'
#
# If the coding method is blockwise, that is, it encodes a block of integers at a time,
# additional options must be specified as part of the coding policy.
# Blockwise coding methods are: 'turbo-rice', and 'pfor'.
# The additional options that must be specified are the block size,
# the leftover coding method, and the minimum padding size.
# If we have less than the minimum padding size number of integers, 
# the leftover coding method will be used, otherwise the list of integers will
# be padded at the end until the block size with 0s. The leftover coding method
# should be a non-blockwise coding method.
# They should be specified in the following format:
# PrimaryCoding:BlockSize:LeftoverCoding:MinPaddingSize
#
# If the coding method is non-blockwise, it suffices to just specify the coding method.
# Non-blockwise coding methods are: 'rice', 's9', 's16', 'vbyte', and 'null'.

# The coding policy to be used for compressing the docIDs.
indexing_doc_id_coding = pfor:128:vbyte:96

# The coding policy to be used for compressing the frequencies.
indexing_frequency_coding = s16

# The coding policy to be used for compressing the positions, if they are to be included.
indexing_position_coding = rice

# The coding policy to be used for compressing the block header.
indexing_block_header_coding = pfor:256:s16:192

#####################
# Merging Parameters
#####################

# Controls whether files that have already been merged should be deleted.
# Saves considerable disk space.
delete_merged_files = false

# See the indexing section for a description of the coding policies.
#
# Changing the merging coding policies from the indexing coding policies
# and re-merging an existing index will allow you to change the index codings
# without re-indexing the whole document collection.

# The coding policy to be used for compressing the docIDs.
merging_doc_id_coding = pfor:128:vbyte:96

# The coding policy to be used for compressing the frequencies.
merging_frequency_coding = s16

# The coding policy to be used for compressing the positions, if they were included in the index.
merging_position_coding = rice

# The coding policy to be used for compressing the block header.
merging_block_header_coding = null

######################
# Layering Parameters
######################

# Controls whether the layers are overlapping or not. If they are, successive layers will always be a superset of the previous layers.
overlapping_layers = false

# This is subject to 'MAX_LIST_LAYERS' defined in 'index_layout_parameters.h'. It controls the (max) number of layers we should have per list.
num_layers = 6

######################
# Querying Parameters
######################

# Sets whether the whole index will be read into main memory.
# If true, the 'block_cache_size' and 'read_ahead_blocks' options are ignored.
memory_resident_index = false

# Sets whether the whole index will be memory mapped into the process address space.
# If true, the 'block_cache_size' and 'read_ahead_blocks' options are ignored.
# This option has precedence over the 'memory_resident_index' option when both are true.
memory_mapped_index = false

# The number of blocks to cache in memory.
block_cache_size = 8192

# The number of blocks to read ahead from a list into the cache.
read_ahead_blocks = 32

# Size of the hash table used for the lexicon. (test values: 1048576, 16777216)
lexicon_size = 8388608

# The maximum number of results returned by the query processor.
max_number_results = 10

# Controls whether positions will be utilized if the index was built with positions.
use_positions = false

###################################
# Index DocID Remapping Parameters
###################################

# Controls whether intermediate remapped index files should be deleted.
# Saves considerable disk space.
delete_intermediate_remapped_files = true

# Size of the buffer (in MiB) to hold index entries.
index_entry_buffer_size = 128

# Size of the positions pool buffer (in MiB). Only allocated if the index to be remapped holds positions.
positions_pool_buffer_size = 256
